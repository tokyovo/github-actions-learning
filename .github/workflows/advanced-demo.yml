name: Advanced GitHub Actions Demo
run-name: ${{ github.actor }} is exploring advanced features 🚀

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  # Job 1: Test on multiple operating systems
  test-matrix:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]
        exclude:
          # Skip Node 18 on macOS to save time
          - os: macos-latest
            node-version: 18

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Display environment info
        run: |
          echo "Operating System: ${{ matrix.os }}"
          echo "Node Version: ${{ matrix.node-version }}"
          node --version
          npm --version

      - name: Run OS-specific command
        if: runner.os == 'Linux'
        run: echo "Running on Linux - using bash"

      - name: Windows specific step
        if: runner.os == 'Windows'
        run: echo "Running on Windows - using PowerShell"

      - name: macOS specific step
        if: runner.os == 'macOS'
        run: echo "Running on macOS - using zsh"

  # Job 2: Build and analyze
  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: test-matrix  # This job waits for test-matrix to complete

    steps:
      - uses: actions/checkout@v4

      - name: Simulate build process
        run: |
          echo "🔨 Building project..."
          echo "Creating build artifacts..."
          mkdir -p build
          echo "Build completed at $(date)" > build/build.log
          echo "Version: 1.0.0" >> build/build.log

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/

  # Job 3: Deploy (only on main branch)
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build  # Waits for build job
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./build

      - name: Display artifact contents
        run: |
          echo "📦 Downloaded artifacts:"
          cat ./build/build.log

      - name: Simulate deployment
        run: |
          echo "🚀 Deploying to production..."
          echo "Deployment successful!"

      - name: Notify success
        run: echo "✅ Deployment completed successfully!"

  # Job 4: Parallel job that runs independently
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    # No 'needs' - runs in parallel with other jobs

    steps:
      - uses: actions/checkout@v4

      - name: Run security checks
        run: |
          echo "🔍 Running security scan..."
          echo "Checking for vulnerabilities..."
          echo "No critical issues found ✅"

      - name: Generate security report
        run: |
          echo "Security scan completed at $(date)" > security-report.txt
          echo "Status: PASSED" >> security-report.txt